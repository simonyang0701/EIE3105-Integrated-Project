
Lab3 C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000258  000002ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000258  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800118  00800118  00000304  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000304  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000334  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000374  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000077b  00000000  00000000  000003b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000068c  00000000  00000000  00000b2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000035f  00000000  00000000  000011bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  0000151c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003a6  00000000  00000000  000015bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000014d  00000000  00000000  00001962  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00001aaf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 09 01 	jmp	0x212	; 0x212 <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e5       	ldi	r30, 0x58	; 88
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 31       	cpi	r26, 0x18	; 24
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e1       	ldi	r26, 0x18	; 24
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a9 31       	cpi	r26, 0x19	; 25
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 e7 00 	call	0x1ce	; 0x1ce <main>
  9e:	0c 94 2a 01 	jmp	0x254	; 0x254 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <T1Delay_ctc>:
		TrafficLight();
	}
}

void T1Delay_ctc() {
	OCR1A = 0x3D09;
  a6:	89 e0       	ldi	r24, 0x09	; 9
  a8:	9d e3       	ldi	r25, 0x3D	; 61
  aa:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  ae:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	while((TIFR1 & (1 << OCF1A)) == 0);
  b2:	b1 9b       	sbis	0x16, 1	; 22
  b4:	fe cf       	rjmp	.-4      	; 0xb2 <T1Delay_ctc+0xc>
	// TCCR1B = 0x00;
	TIFR1 = 0x1 << OCF1A;
  b6:	82 e0       	ldi	r24, 0x02	; 2
  b8:	86 bb       	out	0x16, r24	; 22
  ba:	08 95       	ret

000000bc <T1blink_ctc>:
}

void T1blink_ctc() {
	OCR1A = 0x0C35;
  bc:	85 e3       	ldi	r24, 0x35	; 53
  be:	9c e0       	ldi	r25, 0x0C	; 12
  c0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  c4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	while((TIFR1 & (1 << OCF1A)) == 0);
  c8:	b1 9b       	sbis	0x16, 1	; 22
  ca:	fe cf       	rjmp	.-4      	; 0xc8 <T1blink_ctc+0xc>
	TIFR1 = 0x1 << OCF1A;
  cc:	82 e0       	ldi	r24, 0x02	; 2
  ce:	86 bb       	out	0x16, r24	; 22
  d0:	08 95       	ret

000000d2 <TrafficLight>:
}

void TrafficLight() {
  d2:	df 92       	push	r13
  d4:	ef 92       	push	r14
  d6:	ff 92       	push	r15
  d8:	0f 93       	push	r16
  da:	1f 93       	push	r17
  dc:	cf 93       	push	r28
  de:	df 93       	push	r29
  e0:	cd b7       	in	r28, 0x3d	; 61
  e2:	de b7       	in	r29, 0x3e	; 62
  e4:	68 97       	sbiw	r28, 0x18	; 24
  e6:	0f b6       	in	r0, 0x3f	; 63
  e8:	f8 94       	cli
  ea:	de bf       	out	0x3e, r29	; 62
  ec:	0f be       	out	0x3f, r0	; 63
  ee:	cd bf       	out	0x3d, r28	; 61
	if(!lightOn)
  f0:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
  f4:	88 23       	and	r24, r24
  f6:	09 f4       	brne	.+2      	; 0xfa <TrafficLight+0x28>
  f8:	5c c0       	rjmp	.+184    	; 0x1b2 <TrafficLight+0xe0>
	return;
	
	unsigned char i, j, k;
	unsigned char b_states[8] = {0x21, 0x11, 0x09, 0x0B, 0x0C, 0x0A, 0x09, 0x19};
  fa:	88 e0       	ldi	r24, 0x08	; 8
  fc:	e0 e0       	ldi	r30, 0x00	; 0
  fe:	f1 e0       	ldi	r31, 0x01	; 1
 100:	de 01       	movw	r26, r28
 102:	11 96       	adiw	r26, 0x01	; 1
 104:	01 90       	ld	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	8a 95       	dec	r24
 10a:	e1 f7       	brne	.-8      	; 0x104 <TrafficLight+0x32>
	unsigned char c_states[8] = {0x10, 0x10, 0x10, 0x10, 0x20, 0x20, 0x10, 0x10};
 10c:	88 e0       	ldi	r24, 0x08	; 8
 10e:	e8 e0       	ldi	r30, 0x08	; 8
 110:	f1 e0       	ldi	r31, 0x01	; 1
 112:	de 01       	movw	r26, r28
 114:	19 96       	adiw	r26, 0x09	; 9
 116:	01 90       	ld	r0, Z+
 118:	0d 92       	st	X+, r0
 11a:	8a 95       	dec	r24
 11c:	e1 f7       	brne	.-8      	; 0x116 <TrafficLight+0x44>
	unsigned char t_states[8] = {5, 1, 1, 1, 5, 1, 1, 1};
 11e:	88 e0       	ldi	r24, 0x08	; 8
 120:	e0 e1       	ldi	r30, 0x10	; 16
 122:	f1 e0       	ldi	r31, 0x01	; 1
 124:	de 01       	movw	r26, r28
 126:	51 96       	adiw	r26, 0x11	; 17
 128:	01 90       	ld	r0, Z+
 12a:	0d 92       	st	X+, r0
 12c:	8a 95       	dec	r24
 12e:	e1 f7       	brne	.-8      	; 0x128 <TrafficLight+0x56>
 130:	ee 24       	eor	r14, r14
 132:	e3 94       	inc	r14
 134:	f1 2c       	mov	r15, r1
			for(j = 0; j < t_states[i]; j++) {
				T1Delay_ctc();
			}
			} else {
			for(k = 0; k < 5; k++) {
				PORTC ^= (0x1 << 5);
 136:	68 94       	set
 138:	dd 24       	eor	r13, r13
 13a:	d5 f8       	bld	r13, 5
 13c:	02 c0       	rjmp	.+4      	; 0x142 <TrafficLight+0x70>
 13e:	f3 94       	inc	r15
 140:	e3 94       	inc	r14
	unsigned char b_states[8] = {0x21, 0x11, 0x09, 0x0B, 0x0C, 0x0A, 0x09, 0x19};
	unsigned char c_states[8] = {0x10, 0x10, 0x10, 0x10, 0x20, 0x20, 0x10, 0x10};
	unsigned char t_states[8] = {5, 1, 1, 1, 5, 1, 1, 1};
	
	for(i = 0; i < 8; i++) {
		PORTB = b_states[i];
 142:	8f 2d       	mov	r24, r15
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	e1 e0       	ldi	r30, 0x01	; 1
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	ec 0f       	add	r30, r28
 14c:	fd 1f       	adc	r31, r29
 14e:	e8 0f       	add	r30, r24
 150:	f9 1f       	adc	r31, r25
 152:	20 81       	ld	r18, Z
 154:	25 b9       	out	0x05, r18	; 5
		PORTC = c_states[i];
 156:	e9 e0       	ldi	r30, 0x09	; 9
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	ec 0f       	add	r30, r28
 15c:	fd 1f       	adc	r31, r29
 15e:	e8 0f       	add	r30, r24
 160:	f9 1f       	adc	r31, r25
 162:	20 81       	ld	r18, Z
 164:	28 b9       	out	0x08, r18	; 8
		if(i != 5) {
 166:	25 e0       	ldi	r18, 0x05	; 5
 168:	f2 16       	cp	r15, r18
 16a:	81 f0       	breq	.+32     	; 0x18c <TrafficLight+0xba>
			for(j = 0; j < t_states[i]; j++) {
 16c:	e1 e1       	ldi	r30, 0x11	; 17
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	ec 0f       	add	r30, r28
 172:	fd 1f       	adc	r31, r29
 174:	e8 0f       	add	r30, r24
 176:	f9 1f       	adc	r31, r25
 178:	00 81       	ld	r16, Z
 17a:	00 23       	and	r16, r16
 17c:	99 f0       	breq	.+38     	; 0x1a4 <TrafficLight+0xd2>
 17e:	10 e0       	ldi	r17, 0x00	; 0
				T1Delay_ctc();
 180:	0e 94 53 00 	call	0xa6	; 0xa6 <T1Delay_ctc>
	
	for(i = 0; i < 8; i++) {
		PORTB = b_states[i];
		PORTC = c_states[i];
		if(i != 5) {
			for(j = 0; j < t_states[i]; j++) {
 184:	1f 5f       	subi	r17, 0xFF	; 255
 186:	10 13       	cpse	r17, r16
 188:	fb cf       	rjmp	.-10     	; 0x180 <TrafficLight+0xae>
 18a:	0c c0       	rjmp	.+24     	; 0x1a4 <TrafficLight+0xd2>
 18c:	1f 2d       	mov	r17, r15
				T1Delay_ctc();
			}
			} else {
			for(k = 0; k < 5; k++) {
				PORTC ^= (0x1 << 5);
 18e:	88 b1       	in	r24, 0x08	; 8
 190:	8d 25       	eor	r24, r13
 192:	88 b9       	out	0x08, r24	; 8
				T1blink_ctc();
 194:	0e 94 5e 00 	call	0xbc	; 0xbc <T1blink_ctc>
 198:	11 50       	subi	r17, 0x01	; 1
		if(i != 5) {
			for(j = 0; j < t_states[i]; j++) {
				T1Delay_ctc();
			}
			} else {
			for(k = 0; k < 5; k++) {
 19a:	c9 f7       	brne	.-14     	; 0x18e <TrafficLight+0xbc>
				PORTC ^= (0x1 << 5);
				T1blink_ctc();
			}
			PORTC ^= (0x1 << 5);
 19c:	88 b1       	in	r24, 0x08	; 8
 19e:	8d 25       	eor	r24, r13
 1a0:	88 b9       	out	0x08, r24	; 8
 1a2:	cd cf       	rjmp	.-102    	; 0x13e <TrafficLight+0x6c>
	unsigned char i, j, k;
	unsigned char b_states[8] = {0x21, 0x11, 0x09, 0x0B, 0x0C, 0x0A, 0x09, 0x19};
	unsigned char c_states[8] = {0x10, 0x10, 0x10, 0x10, 0x20, 0x20, 0x10, 0x10};
	unsigned char t_states[8] = {5, 1, 1, 1, 5, 1, 1, 1};
	
	for(i = 0; i < 8; i++) {
 1a4:	87 e0       	ldi	r24, 0x07	; 7
 1a6:	8e 15       	cp	r24, r14
 1a8:	50 f6       	brcc	.-108    	; 0x13e <TrafficLight+0x6c>
				T1blink_ctc();
			}
			PORTC ^= (0x1 << 5);
		}
	}
	PORTB &= 0;
 1aa:	85 b1       	in	r24, 0x05	; 5
 1ac:	15 b8       	out	0x05, r1	; 5
	PORTC &= 0;
 1ae:	88 b1       	in	r24, 0x08	; 8
 1b0:	18 b8       	out	0x08, r1	; 8
}
 1b2:	68 96       	adiw	r28, 0x18	; 24
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	f8 94       	cli
 1b8:	de bf       	out	0x3e, r29	; 62
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	cd bf       	out	0x3d, r28	; 61
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	1f 91       	pop	r17
 1c4:	0f 91       	pop	r16
 1c6:	ff 90       	pop	r15
 1c8:	ef 90       	pop	r14
 1ca:	df 90       	pop	r13
 1cc:	08 95       	ret

000001ce <main>:

int main(void)
{
	// Serial.begin(9600);
	
	DDRB = 0xFF;
 1ce:	8f ef       	ldi	r24, 0xFF	; 255
 1d0:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;
 1d2:	87 b9       	out	0x07, r24	; 7
	DDRD &= 0x00;
 1d4:	8a b1       	in	r24, 0x0a	; 10
 1d6:	1a b8       	out	0x0a, r1	; 10
	
	PORTB &= 0;
 1d8:	85 b1       	in	r24, 0x05	; 5
 1da:	15 b8       	out	0x05, r1	; 5
	PORTC &= 0;
 1dc:	88 b1       	in	r24, 0x08	; 8
 1de:	18 b8       	out	0x08, r1	; 8
	PORTD |= (1 << 3);	// pull up PORTD.2
 1e0:	5b 9a       	sbi	0x0b, 3	; 11

	// interrupt setting
	EIMSK = (1 << 1);
 1e2:	82 e0       	ldi	r24, 0x02	; 2
 1e4:	8d bb       	out	0x1d, r24	; 29
	EICRA = (3 << 2);
 1e6:	8c e0       	ldi	r24, 0x0C	; 12
 1e8:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	sei();
 1ec:	78 94       	sei
	
	// Timer1 setting
	TCNT1 = 0;
 1ee:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1f2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	TCCR1A = 0x00;
 1f6:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = 0x0D;
 1fa:	8d e0       	ldi	r24, 0x0D	; 13
 1fc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	OCR1A = 0x3D09;
 200:	89 e0       	ldi	r24, 0x09	; 9
 202:	9d e3       	ldi	r25, 0x3D	; 61
 204:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 208:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	while(1) {
		TrafficLight();
 20c:	0e 94 69 00 	call	0xd2	; 0xd2 <TrafficLight>
 210:	fd cf       	rjmp	.-6      	; 0x20c <main+0x3e>

00000212 <__vector_2>:
	}
	PORTB &= 0;
	PORTC &= 0;
}

ISR (INT1_vect) {
 212:	1f 92       	push	r1
 214:	0f 92       	push	r0
 216:	0f b6       	in	r0, 0x3f	; 63
 218:	0f 92       	push	r0
 21a:	11 24       	eor	r1, r1
 21c:	8f 93       	push	r24
	lightOn ^= 0xFF;
 21e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 222:	80 95       	com	r24
 224:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
	
	if (lightOn) {
 228:	88 23       	and	r24, r24
 22a:	31 f0       	breq	.+12     	; 0x238 <__vector_2+0x26>
		TCCR1B = 0x0D;
 22c:	8d e0       	ldi	r24, 0x0D	; 13
 22e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
		TIFR1 = 0x1 << OCF1A;
 232:	82 e0       	ldi	r24, 0x02	; 2
 234:	86 bb       	out	0x16, r24	; 22
 236:	04 c0       	rjmp	.+8      	; 0x240 <__vector_2+0x2e>
		} else {
		TCCR1B = 0x00;
 238:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
		TIFR1 = 0x1 << OCF1A;
 23c:	82 e0       	ldi	r24, 0x02	; 2
 23e:	86 bb       	out	0x16, r24	; 22
	}
	PORTB &= 0;
 240:	85 b1       	in	r24, 0x05	; 5
 242:	15 b8       	out	0x05, r1	; 5
	PORTC &= 0;
 244:	88 b1       	in	r24, 0x08	; 8
 246:	18 b8       	out	0x08, r1	; 8

}
 248:	8f 91       	pop	r24
 24a:	0f 90       	pop	r0
 24c:	0f be       	out	0x3f, r0	; 63
 24e:	0f 90       	pop	r0
 250:	1f 90       	pop	r1
 252:	18 95       	reti

00000254 <_exit>:
 254:	f8 94       	cli

00000256 <__stop_program>:
 256:	ff cf       	rjmp	.-2      	; 0x256 <__stop_program>
